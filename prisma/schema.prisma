// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========== 共享表 ==========

/// 用户表（微信用户）
model User {
  openid String @id /// 微信 openid

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 关联关系
  unitelOrders UnitelOrder[]

  @@map("users")
}

/// 管理员表
model Admin {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  email     String?
  role      String   @default("admin")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admins")
}

/// 汇率表
model ExchangeRate {
  id        String   @id @default("MNT_CNY") /// 固定ID
  rate      Decimal  @db.Decimal(10, 4) /// 汇率值 (440)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("exchange_rates")
}

// ========== Unitel 运营商表 ==========

/// 订单类型枚举
enum OrderType {
  balance          /// 话费充值
  data             /// 流量充值
  invoice_payment  /// 账单支付
}

/// 支付状态枚举
enum PaymentStatus {
  unpaid    /// 未支付
  paid      /// 已支付
  refunded  /// 已退款
}

/// 充值状态枚举
enum RechargeStatus {
  pending     /// 待充值
  processing  /// 充值中
  success     /// 充值成功
  failed      /// 充值失败
  timeout     /// 充值超时
}

/// Unitel订单表
model UnitelOrder {
  // 订单基本信息
  orderNo String @id @map("order_no") /// 订单号

  // 用户信息
  openid String
  user   User   @relation(fields: [openid], references: [openid])
  msisdn    String    /// 手机号码
  orderType OrderType @map("order_type") /// 订单类型: balance(话费) | data(流量) | invoice_payment(账单支付)

  // 金额信息（双币种）
  amountMnt    Decimal  @map("amount_mnt") @db.Decimal(10, 2) /// 蒙古国货币金额(MNT)
  amountCny    Decimal  @map("amount_cny") @db.Decimal(10, 2) /// 人民币金额(CNY)
  exchangeRate Decimal? @map("exchange_rate") @db.Decimal(10, 4) /// 汇率快照

  // 产品信息（资费列表字段）
  packageCode    String  @map("package_code") /// 套餐代码
  packageName    String  @map("package_name") /// 套餐名称（蒙古语）
  packageEngName String  @map("package_eng_name") /// 套餐英文名称
  packageUnit    Int?    @map("package_unit") /// 话费单位
  packageData    String? @map("package_data") /// 流量大小（如"3GB"）
  packageDays    Int?    @map("package_days") /// 有效期天数

  // 状态管理
  paymentStatus  PaymentStatus  @map("payment_status") /// 支付状态: unpaid | paid | refunded
  rechargeStatus RechargeStatus @map("recharge_status") /// 充值状态: pending | processing | success | failed

  // Unitel API 特有字段
  svId   String? @map("sv_id") /// Unitel服务ID
  seq    String? /// Unitel序列号
  method String? /// 支付方式

  // VAT 发票信息 (JSON存储)
  vatFlag       String? @map("vat_flag") /// VAT标志 1=开发票, 0=不开
  vatRegisterNo String? @map("vat_register_no") /// VAT注册号
  vatInfo       Json?   @map("vat_info") /// 完整的VAT发票信息

  // API 响应信息
  apiResult String? @map("api_result") /// API返回的result字段
  apiCode   String? @map("api_code") /// API返回的code字段
  apiMsg    String? @map("api_msg") /// API返回的msg字段
  apiRaw    Json?   @map("api_raw") /// 完整的API响应(用于调试)

  // 错误信息
  errorMessage String? @map("error_message") /// 错误消息
  errorCode    String? @map("error_code") /// 错误代码

  // 时间戳
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  paidAt      DateTime? @map("paid_at") /// 支付时间
  completedAt DateTime? @map("completed_at") /// 完成时间

  @@index([openid])
  @@index([msisdn])
  @@index([paymentStatus])
  @@index([rechargeStatus])
  @@index([orderType])
  @@index([createdAt])
  @@map("unitel_orders")
}

/// 充值日志表（记录所有充值尝试，用于审计和幂等性保护）
model RechargeLog {
  id String @id @default(uuid())

  // 订单信息
  orderNo  String @unique @map("order_no") /// 订单号（唯一约束，防止重复充值）
  operator String /// 运营商标识: unitel | ondo

  // 充值请求信息
  msisdn        String  /// 充值手机号
  packageCode   String  @map("package_code") /// 套餐代码
  amountMnt     Decimal @map("amount_mnt") @db.Decimal(10, 2) /// 充值金额(MNT)
  rechargeType  String  @map("recharge_type") /// 充值类型: balance | data | invoice_payment

  // 充值结果
  status       String  @map("status") /// 充值状态: processing | success | failed | timeout
  errorMessage String? @map("error_message") /// 错误消息
  errorCode    String? @map("error_code") /// 错误代码

  // API 响应信息（用于调试和审计）
  apiResult String? @map("api_result") /// API返回的result字段
  apiCode   String? @map("api_code") /// API返回的code字段
  apiMsg    String? @map("api_msg") /// API返回的msg字段
  apiRaw    Json?   @map("api_raw") /// 完整的API响应

  // 时间信息
  startedAt   DateTime  @default(now()) @map("started_at") /// 充值开始时间
  completedAt DateTime? @map("completed_at") /// 充值完成时间
  duration    Int?      /// 充值耗时（毫秒）

  @@index([orderNo])
  @@index([operator])
  @@index([status])
  @@index([startedAt])
  @@map("recharge_logs")
}
